{"version":3,"sources":["poll-data/polls.js","sidebar/poll_list.jsx","poll-form/form.jsx","poll-form/index.jsx","sidebar/index.jsx","main-components/participate-form.jsx","main-components/index.jsx","app.jsx","serviceWorker.js","index.js"],"names":["POLLS","id","title","description","options","value","vote","created","Date","totalVote","opinions","PollList","props","polls","length","ListGroup","map","poll","ListGroupItem","key","onClick","selectPoll","style","cursor","substr","MyForm","errors","buttonValue","handleChange","handleOptionChange","createOption","deleteOption","handleSubmit","Form","onSubmit","FormGroup","Label","for","Input","name","placeholder","onChange","invalid","FormFeedback","type","marginLeft","background","color","padding","borderRadius","opt","index","className","e","Button","disabled","defaultOptions","shortid","generate","PollForm","state","event","setState","target","push","alert","splice","preventDefault","validate","isValid","isUpdate","submit","reset","optionErrors","forEach","Object","keys","this","React","Component","Sidebar","openModal","toggleModal","searchTerm","handleSearch","Modal","isOpen","toggle","unmountOnClose","ModalHeader","ModalBody","addNewPoll","ParticipationForm","selectedOption","getOpinion","pollId","deletePoll","CustomInput","toFixed","MainComponent","updatePoll","App","selectedPolls","concat","find","p","filter","performSearch","toLowerCase","includes","response","option","o","opinion","Container","Row","Col","md","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45e0435c.chunk.js","sourcesContent":["const POLLS=[\r\n    {\r\n        id:'45184',\r\n        title:'What is Your Favorite Programming Language',\r\n        description:'There are lot of popular programming language available',\r\n        options:[\r\n            {id:'14514',value:'C Programming',vote:0},\r\n            {id:'17741',value:'Java', vote:0},\r\n            {id:'41541das',value:'Javascript',vote:0},\r\n            {id:'ssdas444', value:'Python', vote:0}\r\n        ],\r\n        created:new Date(),\r\n        totalVote:0,\r\n        opinions:[]\r\n    },\r\n    {\r\n        id:'45sd184',\r\n        title:'Which Frontend Framework do you Prefer?',\r\n        description:'Javascript has a vast variety of frontend librarie and frameworks.Each and every day we have a new one.Among those which frontend framework you like and prefer others?',\r\n        options:[\r\n            {id:'454157',value:'Angular',vote:0},\r\n            {id:'415715',value:'React', vote:0},\r\n            {id:'41544s',value:'Vue',vote:0}\r\n        ],\r\n        created:new Date(),\r\n        totalVote:0,\r\n        opinions:[]\r\n    },\r\n    {\r\n        id:'32d232a',\r\n        title:'What is the best way to create android app?',\r\n        description:\"I want to create an android application but I don't understand which technology would br better.There are lot of technologies available and my application is not so bulky.I need an easy and simple solution,so that I can prototype within no time.Please share your opinions\",\r\n        options:[\r\n            {id:'4158112',value:'Java',vote:0},\r\n            {id:'174441',value:'Kotlin', vote:0},\r\n            {id:'15624',value:'React Native',vote:0},\r\n            {id:'164235', value:'Flutter', vote:0},\r\n            {id:'156242', value:'Ionic', vote:0},\r\n        ],\r\n        created:new Date(),\r\n        totalVote:0,\r\n        opinions:[]\r\n    }\r\n];\r\n\r\nexport default POLLS;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nconst PollList=props=>{\r\nif(props.polls.length==0){\r\n    return <p>There is no poll!</p>\r\n}\r\nreturn(\r\n    <ListGroup>\r\n    {props.polls.map(poll=>(\r\n        <ListGroupItem\r\n        key={poll.id}\r\n        onClick={()=>props.selectPoll(poll.id)}\r\n        style={{cursor:'pointer'}}>\r\n        {poll.title.length>30?poll.title.substr(0,30)+'...':poll.title}\r\n    </ListGroupItem>\r\n    ))}\r\n    </ListGroup>\r\n)\r\n};\r\nPollList.propTypes={\r\n    polls:PropTypes.array.isRequired,\r\n    selectPoll:PropTypes.func.isRequired\r\n}\r\nexport default PollList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Form,FormGroup,Label,Input,FormFeedback,Button} from 'reactstrap';\r\n\r\n\r\nconst MyForm=({title,description,options,errors,buttonValue,handleChange,handleOptionChange,createOption,deleteOption,handleSubmit })=>(\r\n\r\n    <Form onSubmit={handleSubmit}>\r\n    <FormGroup>\r\n    <Label for='title'>Title</Label>\r\n    <Input\r\n    name='title'\r\n    id='title'\r\n    placeholder='A Dummy Title'\r\n    value={title}\r\n    onChange={handleChange}\r\n    invalid={errors.title?true:false}\r\n    />\r\n    {errors.title && <FormFeedback>{errors.title}</FormFeedback>}\r\n    </FormGroup>\r\n\r\n    <FormGroup>\r\n    <Label for='description'>Description</Label>\r\n    <Input\r\n    type='textarea'\r\n    name='description'\r\n    id='description'\r\n    placeholder='Describe Your Poll'\r\n    value={description}\r\n    onChange={handleChange}\r\n    invalid={errors.description?true:false}\r\n    />\r\n    {errors.description && <FormFeedback>{errors.description}</FormFeedback>}\r\n    </FormGroup>\r\n    <FormGroup>\r\n    <Label>Enter Options\r\n    <span\r\n    style={{\r\n        marginLeft:'30px',\r\n        background:'green',\r\n        color:'white',\r\n        padding:'5px',\r\n        borderRadius:'5px',\r\n        cursor:'pointer'\r\n    }}\r\n    onClick={createOption}\r\n    >Add Option\r\n    </span>\r\n    </Label>\r\n    {options.map((opt,index)=>(\r\n        <div key={opt.id} className='d-flex my-2'>\r\n        \r\n        <Input\r\n        value={opt.value}\r\n        onChange={e=>handleOptionChange(e,index)}\r\n        invalid={errors.options && errors.options[index]?true:false}\r\n        />\r\n        {// {errors.options && <FormFeedback>{errors.options}</FormFeedback>} \r\n    }\r\n        <Button\r\n        color='danger'\r\n        disabled={options.length<=2}\r\n        className='ml-2'\r\n        onClick={()=>deleteOption(index)}\r\n        >Delete</Button>\r\n        </div>\r\n    ))}\r\n    </FormGroup>\r\n    <Button color='primary' type='submit'>{buttonValue}</Button>\r\n    </Form>\r\n);\r\nMyForm.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    description:PropTypes.string.isRequired,\r\n    options:PropTypes.array.isRequired,\r\n    errors:PropTypes.object.isRequired,\r\n    buttonValue:PropTypes.string.isRequired,\r\n    handleChange:PropTypes.func.isRequired,\r\n    handleOptionChange:PropTypes.func.isRequired,\r\n    createOption:PropTypes.func.isRequired,\r\n    deleteOption:PropTypes.func.isRequired,\r\n    handleSubmit:PropTypes.func.isRequired\r\n}\r\n\r\nexport default MyForm;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport shortid from 'shortid';\r\nimport MyForm from './form'\r\n\r\nconst defaultOptions=[\r\n    {id:shortid.generate(),value:'',vote:0},\r\n    {id:shortid.generate(),value:'',vote:0}\r\n];\r\n\r\nclass PollForm extends React.Component{\r\n    state={\r\n        title:'',\r\n        description:'',\r\n        options:defaultOptions,\r\n        errors:{}\r\n    };\r\n\r\n    componentDidMount(){\r\n        const{poll}=this.props;\r\n        if(poll && Object.keys(poll).length>0){\r\n            this.setState({\r\n                title:poll.title,\r\n                description:poll.description,\r\n                options:poll.options\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange=event=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        });\r\n    };\r\n\r\n    handleOptionChange=(event,index)=>{\r\n        const {options}=this.state\r\n        options[index].value=event.target.value;\r\n        this.setState({options});\r\n    };\r\n\r\n    createOption=()=>{\r\n        const {options}=this.state;\r\n        if(options.length<5){\r\n            options.push({\r\n                id:shortid.generate(),\r\n                value:'',\r\n                vote:0\r\n            });\r\n            this.setState({options});\r\n        }else{\r\n            alert('You Can Create max 5 Options')\r\n        }\r\n    };\r\n\r\n    deleteOption=index=>{\r\n        const {options}=this.state;\r\n        if(options.length>2){\r\n            options.splice(index,1)\r\n            this.setState({options})\r\n        }else{\r\n            alert('You must have at least two options')\r\n        }\r\n    };\r\n\r\n    handleSubmit=event=>{\r\n        event.preventDefault();\r\n        const {isValid,errors}=this.validate();\r\n\r\n        if(isValid){\r\n       const {title,description,options}=this.state;\r\n       const poll={\r\n        title,\r\n        description,\r\n        options\r\n       };\r\n       if(this.props.isUpdate){\r\n           poll.id=this.props.poll.id\r\n           this.props.submit(poll)\r\n           alert('Update Successfully')\r\n       }else{\r\n        this.props.submit(poll);\r\n        event.target.reset()\r\n        this.setState({\r\n            title:'',\r\n            description:'',\r\n            options:defaultOptions,\r\n            errors:{}\r\n       });\r\n    }\r\n        }else{\r\n            this.setState({errors});\r\n        }\r\n       \r\n    };\r\n\r\n    validate=()=>{\r\n        const errors={}\r\n        const {title,description,options}=this.state;\r\n\r\n        if(!title){\r\n            errors.title='Please Provide A Title'\r\n        }else if(title.length<20){\r\n            errors.title='Title Too Short'\r\n        }else if(title.length>100){\r\n            errors.title='Title Too Long'\r\n        }\r\n\r\n        if(!description){\r\n            errors.description='Please Provide A Description'\r\n        }else if(description.length<10){\r\n            errors.description='Description Too Short'\r\n        }else if(description.length>500){\r\n            errors.description='Description Too Long'\r\n        }\r\n       \r\n        const optionErrors=[];\r\n\r\n        options.forEach((opt,index)=>{\r\n            if(!opt.value){\r\n                optionErrors[index]='Option Text Empty';\r\n                //  optionErrors.push('Option Text Empty')\r\n            }else if(opt.value.length>100){\r\n                optionErrors[index]='Option Text Too Long'\r\n            }\r\n        })\r\n        if(optionErrors.length>0){\r\n            errors.options=optionErrors;\r\n        }\r\n\r\n        return{\r\n            errors,\r\n            isValid:Object.keys(errors).length==0\r\n        }\r\n\r\n    };\r\n\r\n    render(){\r\n        const {title,description,options,errors}=this.state\r\n        return(\r\n          \r\n            <MyForm\r\n            title={title}\r\n            description={description}\r\n            options={options}\r\n            buttonValue={this.props.buttonValue || 'Create Poll'}\r\n            errors={errors}\r\n            handleChange={this.handleChange}\r\n            handleOptionChange={this.handleOptionChange}\r\n            createOption={this.createOption}\r\n            deleteOption={this.deleteOption}\r\n            handleSubmit={this.handleSubmit}\r\n            />\r\n        )\r\n    }\r\n};\r\nPollForm.propTypes={\r\n\r\n    buttonValue:PropTypes.string,\r\n    submit:PropTypes.func.isRequired \r\n}\r\nexport default PollForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Input,Modal,ModalBody,ModalHeader} from 'reactstrap';\r\nimport PollList from './poll_list'\r\nimport PollForm from '../poll-form'\r\n\r\nclass Sidebar extends React.Component{\r\n\r\n    state={\r\n        openModal:false\r\n    }\r\n\r\n    toggleModal=()=>{\r\n     this.setState({\r\n         openModal:!this.state.openModal\r\n     })\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div style={{background:'#efefef',padding:'10px'}}>\r\n            <div className=\"d-flex mb-5\">\r\n            <Input\r\n            type='search'\r\n            placeholder='Search'\r\n            value={this.props.searchTerm}\r\n            onChange={event=>this.props.handleSearch(event.target.value)}\r\n            />\r\n            <Button\r\n            color='success'\r\n            className='ml-2'\r\n            onClick={this.toggleModal}\r\n            >New</Button>\r\n            </div> \r\n            <h3>List of Polls</h3> \r\n            <hr/>\r\n\r\n            <PollList\r\n            polls={this.props.polls}\r\n            selectPoll={this.props.selectPoll}\r\n            />  \r\n            <Modal isOpen={this.state.openModal} toggle={this.toggleModal} unmountOnClose={true}>\r\n            <ModalHeader toggle={this.toggleModal}>\r\n            Create A New Poll\r\n            </ModalHeader>\r\n            <ModalBody>\r\n            <PollForm submit={this.props.addNewPoll}/>\r\n            </ModalBody>\r\n            </Modal>   \r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\nSidebar.propTypes={\r\n    searchTerm:PropTypes.string.isRequired,\r\n    handleSearch:PropTypes.func.isRequired,\r\n    polls:PropTypes.array.isRequired,\r\n    selectPoll:PropTypes.func.isRequired,\r\n    submit:PropTypes.func.isRequired\r\n}\r\nexport default Sidebar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {CustomInput, Form, FormFeedback, FormGroup, Label,Button,Input} from 'reactstrap';\r\n\r\n\r\n\r\nclass ParticipationForm extends React.Component{\r\n    state={\r\n        name:'',\r\n        selectedOption:'',\r\n        errors:{}\r\n    };\r\n\r\n    handleChange=event=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    };\r\n    handleSubmit=event=>{\r\n        event.preventDefault()\r\n        const {errors,isValid}=this.validate()\r\n\r\n        if(isValid){\r\n        this.props.getOpinion({\r\n            pollId:this.props.poll.id,\r\n            name:this.state.name,\r\n            selectedOption:this.state.selectedOption\r\n        })\r\n        event.target.reset()\r\n        this.setState({\r\n            name:'',\r\n            selectedOption:'',\r\n            errors:{}\r\n        })\r\n        }else{\r\n            this.setState({errors})\r\n        }\r\n\r\n    };\r\n    validate=()=>{\r\n        const errors={}\r\n        const {name,selectedOption}=this.state\r\n\r\n        if(!name){\r\n            errors.name='Please Provide A Name'\r\n        }else if(name.length>20){\r\n            errors.name='Name Too Long'\r\n        }\r\n        if(!selectedOption){\r\n            errors.selectedOption='Please Select One Option'\r\n        }\r\n        return{\r\n            errors,\r\n            isValid:Object.keys(errors).length==0\r\n        }\r\n    };\r\n    render(){\r\n\r\n        return(\r\n           <Form onSubmit={this.handleSubmit}>\r\n           <div className='d-flex'>\r\n           <h4>Options</h4>\r\n           <Button\r\n           color='warning'\r\n           type='button'\r\n           className='ml-auto'\r\n           onClick={this.props.toggleModal}\r\n           >\r\n           Edit\r\n           </Button>\r\n\r\n           <Button\r\n           type='button'\r\n           className='ml-2'\r\n           onClick={()=>this.props.deletePoll(this.props.poll.id)}\r\n           >\r\n           Delete\r\n           </Button>\r\n           </div>\r\n           {\r\n               this.props.poll.options.map(opt=>(\r\n                   <FormGroup className=\"my-2\"\r\n                   key={opt.id}>\r\n                   <Label className='d-flex'>\r\n                   <CustomInput\r\n                   type='radio'\r\n                   id={opt.id}\r\n                   name='selectedOption'\r\n                   value={opt.id}\r\n                   onChange={this.handleChange}\r\n                   invalid={this.state.errors.selectedOption ? true:false}/>\r\n                   {opt.value}\r\n                   <span\r\n                   style={{padding:'5px 20px',background:'green',color:'white',borderRadius:'5px'}}\r\n                   className='ml-auto'\r\n                   >\r\n                   {opt.vote}\r\n                   </span>\r\n\r\n                   <span\r\n                   style={{padding:'5px 20px',background:'orange',color:'white',borderRadius:'5px'}}\r\n                   className='ml-2'\r\n                   >\r\n                       {this.props.poll.totalVote>0 ? (100*opt.vote)/this.props.poll.totalVote.toFixed(2):0}\r\n                       %\r\n                   </span>\r\n                   </Label>\r\n                   </FormGroup>\r\n               ))\r\n           }\r\n           <FormGroup className='my-3'>\r\n           <Label>\r\n           Enter Your Name\r\n           </Label>\r\n           <Input\r\n           name='name'\r\n           placeholder='Tanjil'\r\n           value={this.state.value}\r\n           onChange={this.handleChange}\r\n           invalid={this.state.errors.name ? true:false}\r\n           />\r\n           {this.state.errors.name && <FormFeedback>{this.state.errors.name}</FormFeedback>}\r\n           </FormGroup>\r\n           <Button type='submit'>Submit Your Opinion</Button>\r\n           </Form>\r\n        )\r\n    }\r\n};\r\nParticipationForm.propTypes={\r\n    getOpinion:PropTypes.func.isRequired,\r\n    poll:PropTypes.object.isRequired,\r\n    deletePoll:PropTypes.func.isRequired,\r\n    toggleModal:PropTypes.func.isRequired\r\n\r\n}\r\nexport default ParticipationForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport PollForm from '../poll-form';\r\nimport ParticipationForm from './participate-form';\r\n\r\nclass MainComponent extends React.Component{\r\n state={\r\n     openModal:false\r\n };\r\n\r\n toggleModal=()=>{\r\n     this.setState({\r\n         openModal:!this.state.openModal\r\n     })\r\n };\r\n\r\n    render(){\r\n        if(Object.keys(this.props.poll).length==0){\r\n            return(\r\n                <div>\r\n                <h3>Welcome to My Application</h3>\r\n                <p>You can create as many poll as you want.Click the new button to create a new poll.To check details of a poll please select from the left sidebar.By selecting a poll you can check it's details,participate and check others opinion about this poll </p>\r\n                </div>\r\n            )\r\n        };\r\n\r\n        const {poll,getOpinion,updatePoll,deletePoll}=this.props\r\n        return(\r\n           <div>\r\n          <h3>{poll.title}</h3>\r\n          <p>{poll.description}</p>\r\n          <br/>\r\n          <ParticipationForm\r\n          poll={poll}\r\n          getOpinion={getOpinion}\r\n          toggleModal={this.toggleModal}\r\n          deletePoll={deletePoll}\r\n          />\r\n          <Modal isOpen={this.state.openModal} toggle={this.toggleModal}\r\n          unmountOnClose={true}>\r\n          <ModalHeader toggle={this.toggleModal}>Update Poll</ModalHeader>\r\n          <ModalBody>\r\n          <PollForm \r\n          poll={poll}\r\n          isUpdate={true}\r\n          submit={updatePoll}\r\n          buttonValue='Update Poll'\r\n          />\r\n          </ModalBody>\r\n          </Modal>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nMainComponent.propTypes={\r\n    poll:PropTypes.object.isRequired,\r\n    getOption:PropTypes.func.isRequired,\r\n    updatePoll:PropTypes.func.isRequired,\r\n    deletePoll:PropTypes.func.isRequired\r\n}\r\nexport default MainComponent;","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport { Container,Row,Col } from 'reactstrap';\r\nimport POLLS from './poll-data/polls.js';\r\nimport Sidebar from './sidebar';\r\nimport MainComponent from './main-components';\r\n\r\nclass App extends React.Component{\r\n    state={\r\n        polls:[],\r\n        selectedPolls:{},\r\n        searchTerm:''\r\n    }\r\n  //life cycle method\r\n\r\n  componentDidMount(){\r\n      this.setState({polls:POLLS})\r\n  };\r\n\r\n  //Create a new poll\r\n\r\n  addNewPoll=poll=>{\r\n      poll.id=shortid.generate()\r\n      poll.created=new Date()\r\n      poll.totalVote=0\r\n      poll.opinions=[]\r\n\r\n      this.setState({\r\n          polls:this.state.polls.concat(poll)\r\n      })\r\n  };\r\n\r\n  //Update Poll\r\n\r\n  updatePoll=updatePoll=>{\r\n      const polls=[...this.state.polls];\r\n      const poll=polls.find(p=>p.id==updatePoll.id);\r\n\r\n      poll.title=updatePoll.title;\r\n      poll.description=updatePoll.description;\r\n      poll.opinions=updatePoll.opinions;\r\n\r\n      this.setState({polls})\r\n  };\r\n\r\n // Delete poll\r\n\r\n deletePoll=pollId=>{\r\n     const polls=this.state.polls.filter(p=>p.id!=pollId)\r\n     this.setState({polls,selectedPolls:{}})\r\n }\r\n\r\n//selectPoll\r\n\r\nselectPoll=pollId=>{\r\n    const poll=this.state.polls.find(p=>p.id==pollId)\r\n    this.setState({selectedPolls:poll});\r\n}\r\n\r\n//handle Search\r\n\r\nhandleSearch=searchTerm=>{     //not state searchTerm just function parameter\r\nthis.setState({searchTerm})\r\n};\r\n\r\nperformSearch=()=>{\r\n    return this.state.polls.filter(poll=>poll.title.toLowerCase().includes(this.state.searchTerm.toLowerCase())\r\n    );\r\n}\r\n\r\ngetOpinion=response=>{\r\n    const {polls}=this.state\r\n    const poll=polls.find(p=>p.id==response.pollId);\r\n    const option =poll.options.find(\r\n        o=>o.id==response.selectedOption\r\n    );\r\n    poll.totalVote++;\r\n    option.vote++;\r\n    const opinion={\r\n        id:shortid.generate(),\r\n        name:response.name,\r\n        selectedOption:response.selectedOption\r\n    };\r\n\r\n    poll.opinions.push(opinion);\r\n    this.setState({polls});\r\n};\r\n\r\n    render(){\r\n        const polls=this.performSearch()\r\n        return(\r\n           <Container className='my-5'>\r\n           <Row>\r\n           <Col md={4}>\r\n           <Sidebar \r\n           polls={polls}  //pass render local array\r\n           searchTerm={this.state.searchTerm}\r\n           selectPoll={this.selectPoll}\r\n           handleSearch={this.handleSearch}\r\n           addNewPoll={this.addNewPoll }\r\n           />\r\n           </Col>\r\n\r\n           <Col md={8}>\r\n           <MainComponent\r\n           poll={this.state.selectedPolls}\r\n           getOpinion={this.getOpinion}\r\n           updatePoll={this.updatePoll}\r\n           deletePoll={this.deletePoll}\r\n           />\r\n           </Col>\r\n           </Row>\r\n           </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}